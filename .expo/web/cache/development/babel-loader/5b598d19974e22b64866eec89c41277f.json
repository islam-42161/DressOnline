{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from 'react';\nimport { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport Home from \"./Activities/Home\";\nimport Settings from \"./Activities/Settings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Screen = createBottomTabNavigator().Screen;\nvar Navigator = createBottomTabNavigator().Navigator;\n\nvar App = function App() {\n  return _jsxs(NavigationContainer, {\n    children: [_jsxs(Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused ? 'ios-home' : 'ios-home-outline';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-settings' : 'ios-settings-outline';\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray',\n          header: function header() {\n            return null;\n          },\n          tabBarBadgeStyle: {\n            backgroundColor: 'dodgerblue'\n          }\n        };\n      },\n      children: [_jsx(Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          tabBarBadge: null\n        }\n      }), _jsx(Screen, {\n        name: \"Settings\",\n        component: Settings,\n        options: {\n          tabBarBadge: null\n        }\n      })]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n};\n\nexport default App;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","StatusBar","NavigationContainer","createBottomTabNavigator","Ionicons","Home","Settings","Screen","Navigator","App","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","header","tabBarBadgeStyle","backgroundColor","tabBarBadge","styles","StyleSheet","create"],"sources":["D:/RAW code/JS/Mobile Application/Expo Apps/Under Construction/DressOnline/App.js"],"sourcesContent":["import { StyleSheet} from 'react-native'\nimport React from 'react'\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport { Ionicons } from '@expo/vector-icons';\nimport Home from './Activities/Home';\nimport Settings from './Activities/Settings';\nconst Screen = createBottomTabNavigator().Screen;\nconst Navigator = createBottomTabNavigator().Navigator;\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Navigator initialRouteName='Home'\n              screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                  let iconName;\n      \n                  if (route.name === 'Home') {\n                    iconName = focused\n                      ? 'ios-home'\n                      : 'ios-home-outline';\n                  } else if (route.name === 'Settings') {\n                    iconName = focused ? 'ios-settings' : 'ios-settings-outline';\n                  }\n      \n                  // You can return any component that you like here!\n                  return <Ionicons name={iconName} size={size} color={color} />;\n                },\n                tabBarActiveTintColor: 'tomato',\n                tabBarInactiveTintColor: 'gray',\n                header: ()=>null,\n                tabBarBadgeStyle:{\n                  backgroundColor:'dodgerblue'\n                },\n              })}\n              \n      >\n        <Screen name=\"Home\" component={Home} options={{ tabBarBadge: null }}/>\n        <Screen name='Settings' component={Settings} options={{ tabBarBadge: null }}/>\n      </Navigator>\n\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n  )\n}\n\nexport default App\n\nconst styles = StyleSheet.create({})"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;;;AACA,IAAMC,MAAM,GAAGJ,wBAAwB,GAAGI,MAA1C;AACA,IAAMC,SAAS,GAAGL,wBAAwB,GAAGK,SAA7C;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,OACE,MAAC,mBAAD;IAAA,WACE,MAAC,SAAD;MAAW,gBAAgB,EAAC,MAA5B;MACQ,aAAa,EAAE;QAAA,IAAGC,KAAH,QAAGA,KAAH;QAAA,OAAgB;UAC7BC,UAAU,EAAE,2BAA8B;YAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;YAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;YAAA,IAAXC,IAAW,SAAXA,IAAW;YACxC,IAAIC,QAAJ;;YAEA,IAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;cACzBD,QAAQ,GAAGH,OAAO,GACd,UADc,GAEd,kBAFJ;YAGD,CAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;cACpCD,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,sBAAtC;YACD;;YAGD,OAAO,KAAC,QAAD;cAAU,IAAI,EAAEG,QAAhB;cAA0B,IAAI,EAAED,IAAhC;cAAsC,KAAK,EAAED;YAA7C,EAAP;UACD,CAd4B;UAe7BI,qBAAqB,EAAE,QAfM;UAgB7BC,uBAAuB,EAAE,MAhBI;UAiB7BC,MAAM,EAAE;YAAA,OAAI,IAAJ;UAAA,CAjBqB;UAkB7BC,gBAAgB,EAAC;YACfC,eAAe,EAAC;UADD;QAlBY,CAAhB;MAAA,CADvB;MAAA,WAyBE,KAAC,MAAD;QAAQ,IAAI,EAAC,MAAb;QAAoB,SAAS,EAAEhB,IAA/B;QAAqC,OAAO,EAAE;UAAEiB,WAAW,EAAE;QAAf;MAA9C,EAzBF,EA0BE,KAAC,MAAD;QAAQ,IAAI,EAAC,UAAb;QAAwB,SAAS,EAAEhB,QAAnC;QAA6C,OAAO,EAAE;UAAEgB,WAAW,EAAE;QAAf;MAAtD,EA1BF;IAAA,EADF,EA8BE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EA9BF;EAAA,EADF;AAkCD,CAnCD;;AAqCA,eAAeb,GAAf;AAEA,IAAMc,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf"},"metadata":{},"sourceType":"module"}